// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microservices.Demo.Report.API.Data.Entities.Configurations;
using Microservices.Demo.Report.API.Infrastructure.Data.Entities;
using Microsoft.EntityFrameworkCore;
#nullable disable

#nullable disable

namespace Microservices.Demo.Report.API.Data.Context
{
    public partial class MicroservicesDemoPolicyDBContext : DbContext
    {
        public MicroservicesDemoPolicyDBContext()
        {
        }

        public MicroservicesDemoPolicyDBContext(DbContextOptions<MicroservicesDemoPolicyDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Offer> Offers { get; set; }
        public virtual DbSet<OfferCover> OfferCovers { get; set; }
        public virtual DbSet<OfferStatus> OfferStatuses { get; set; }
        public virtual DbSet<Policy> Policies { get; set; }
        public virtual DbSet<PolicyCover> PolicyCovers { get; set; }
        public virtual DbSet<PolicyHolder> PolicyHolders { get; set; }
        public virtual DbSet<PolicyStatus> PolicyStatuses { get; set; }
        public virtual DbSet<PolicyValidityPeriod> PolicyValidityPeriods { get; set; }
        public virtual DbSet<PolicyVersion> PolicyVersions { get; set; }

        /*protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Scaffolding:ConnectionString", "Data Source=(local);Initial Catalog=Microservices.Demo.Policy.DB;Integrated Security=true");

            modelBuilder.ApplyConfiguration(new Configurations.AddressConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.MessageConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OfferConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OfferCoverConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OfferStatusConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyCoverConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyHolderConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyStatusConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyValidityPeriodConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyVersionConfiguration());
            OnModelCreatingPartial(modelBuilder);
        }*/

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
