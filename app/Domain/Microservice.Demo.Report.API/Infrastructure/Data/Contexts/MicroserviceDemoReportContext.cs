// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microservice.Demo.Report.API.Data.Contexts.Configurations;
using Microservice.Demo.Report.API.Data.Entities;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

#nullable disable

namespace Microservice.Demo.Report.API.Data.Contexts
{
    public partial class MicroserviceDemoReportContext : DbContext
    {
        public MicroserviceDemoReportContext()
        {
        }

        public MicroserviceDemoReportContext(DbContextOptions<MicroserviceDemoReportContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Offer> Offers { get; set; }
        public virtual DbSet<OfferCover> OfferCovers { get; set; }
        public virtual DbSet<OfferStatus> OfferStatuses { get; set; }
        public virtual DbSet<Policy> Policies { get; set; }
        public virtual DbSet<PolicyCover> PolicyCovers { get; set; }
        public virtual DbSet<PolicyHolder> PolicyHolders { get; set; }
        public virtual DbSet<PolicyStatus> PolicyStatuses { get; set; }
        public virtual DbSet<PolicyValidityPeriod> PolicyValidityPeriods { get; set; }
        public virtual DbSet<PolicyVersion> PolicyVersions { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.ApplyConfiguration(new Configurations.AddressConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.MessageConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OfferConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OfferCoverConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OfferStatusConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyCoverConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyHolderConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyStatusConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyValidityPeriodConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PolicyVersionConfiguration());
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
